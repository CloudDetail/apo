// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/alertinput/cluster/create": {
            "post": {
                "description": "Create Cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "Create Cluster",
                "parameters": [
                    {
                        "description": "Cluster Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/integration.Cluster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/cluster/delete": {
            "post": {
                "description": "DeleteCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "DeleteCluster",
                "parameters": [
                    {
                        "description": "Cluster Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/integration.Cluster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/cluster/list": {
            "get": {
                "description": "ListCluster",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "ListCluster",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/integration.ListClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/cluster/update": {
            "post": {
                "description": "UpdateCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "UpdateCluster",
                "parameters": [
                    {
                        "description": "Cluster Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/integration.Cluster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/event/json": {
            "post": {
                "description": "Receive data from a specific data source based on a JSON structure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "Receive data from a specific data source based on a JSON structure",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/event/source": {
            "post": {
                "description": "Receive data based on alarm source configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "Receive data based on alarm source configuration",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/schema/column/get": {
            "get": {
                "description": "GetSchemaColumns",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "GetSchemaColumns",
                "parameters": [
                    {
                        "description": "Schema Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.AlertSchemaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.GetSchemaColumnsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/schema/create": {
            "post": {
                "description": "CreateSchema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "CreateSchema",
                "parameters": [
                    {
                        "description": "Schema Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.CreateSchemaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/schema/data/get": {
            "get": {
                "description": "core.HandlerFunc",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "core.HandlerFunc",
                "parameters": [
                    {
                        "description": "Schema Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.AlertSchemaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.GetSchemaDataReponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/schema/data/update": {
            "post": {
                "description": "UpdateSchemaData",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "UpdateSchemaData",
                "parameters": [
                    {
                        "description": "Update SchemaData Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.UpdateSchemaDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/schema/delete": {
            "post": {
                "description": "DeleteSchema",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "DeleteSchema",
                "parameters": [
                    {
                        "description": "SchemaInfo",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.AlertSchemaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/schema/list": {
            "get": {
                "description": "ListSchema",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.ListSchema"
                ],
                "summary": "ListSchema",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.ListSchemaResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/schema/listwithcolumns": {
            "get": {
                "description": "ListSchemaWithColumns",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "ListSchemaWithColumns",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.ListSchemaWithColumnsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/schema/used/check": {
            "get": {
                "description": "Check whether the mapping structure is used",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "Check whether the mapping structure is used",
                "parameters": [
                    {
                        "description": "Schema Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.AlertSchemaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.CheckSchemaIsUsedReponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/source/create": {
            "post": {
                "description": "Create Alarm Source",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "Create Alarm Source",
                "parameters": [
                    {
                        "description": "AlertSource",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.AlertSource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.AlertSource"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/source/delete": {
            "post": {
                "description": "DeleteAlertSource",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "DeleteAlertSource",
                "parameters": [
                    {
                        "description": "alertSource",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.SourceFrom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.SourceFrom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/source/enrich/default": {
            "get": {
                "description": "GetDefaultAlertEnrichRule",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "GetDefaultAlertEnrichRule",
                "parameters": [
                    {
                        "description": "Source Type",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.DefaultAlertEnrichRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.DefaultAlertEnrichRuleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/source/enrich/default/clear": {
            "get": {
                "description": "Clear default alarm rich rules",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "Clear default alarm rich rules",
                "parameters": [
                    {
                        "description": "Request info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.DefaultAlertEnrichRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/source/enrich/default/set": {
            "post": {
                "description": "SetDefaultAlertEnrichRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "SetDefaultAlertEnrichRule",
                "parameters": [
                    {
                        "description": "Default EnrichRule",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.SetDefaultAlertEnrichRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/source/enrich/get": {
            "get": {
                "description": "GetAlertSourceEnrichRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "GetAlertSourceEnrichRule",
                "parameters": [
                    {
                        "description": "Source Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.SourceFrom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.GetAlertEnrichRuleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/source/enrich/update": {
            "post": {
                "description": "UpdateAlertSourceEnrichRule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "UpdateAlertSourceEnrichRule",
                "parameters": [
                    {
                        "description": "Update Config",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.AlerEnrichRuleConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/source/get": {
            "post": {
                "description": "GetAlertSource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "GetAlertSource",
                "parameters": [
                    {
                        "description": "Source Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.SourceFrom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.AlertSource"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/source/list": {
            "get": {
                "description": "ListAlertSource",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "ListAlertSource",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.ListAlertSourceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertinput/source/update": {
            "post": {
                "description": "UpdateAlertSource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "UpdateAlertSource",
                "parameters": [
                    {
                        "description": "alertSource Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/alert.AlertSource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/alertmanager/receiver": {
            "post": {
                "description": "update alarm notification object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "update alarm notification object",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateAlertManagerConfigReceiver"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete alarm notification object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "delete alarm notification object",
                "parameters": [
                    {
                        "description": "Delete object",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteAlertManagerConfigReceiverRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/alertmanager/receiver/add": {
            "post": {
                "description": "new alarm notification object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "new alarm notification object",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddAlertManagerConfigReceiver"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/alertmanager/receiver/list": {
            "post": {
                "description": "list alarm notification objects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "list alarm notification objects",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetAlertManagerConfigReceverRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAlertManagerConfigReceiverResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/events/list": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "parameters": [
                    {
                        "description": "请求信息",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AlertEventSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AlertEventSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/inputs/alertmanager": {
            "post": {
                "description": "get AlertManager alarm events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "get AlertManager alarm events",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.InputAlertManagerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/outputs/dingtalk/{uuid}": {
            "post": {
                "description": "the received alarm is forwarded to the DingTalk",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "the received alarm is forwarded to the DingTalk",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ForwardToDingTalkRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "DingTalk the uuid corresponding to the webhook",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/rule": {
            "post": {
                "description": "update alarm rules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "update alarm rules",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateAlertRuleRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete alarm rules",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "delete alarm rules",
                "parameters": [
                    {
                        "description": "Delete object",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteAlertRuleRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/rule/add": {
            "post": {
                "description": "new alarm rules",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "new alarm rules",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddAlertRuleRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/rule/available": {
            "get": {
                "description": "check whether the alarm rule name is available",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "check whether the alarm rule name is available",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query alarm rule file name",
                        "name": "alertRuleFile",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "group name",
                        "name": "group",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Alarm rule name",
                        "name": "alert",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CheckAlertRuleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/rule/groups": {
            "get": {
                "description": "get the corresponding interfaces of group and label",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "get the corresponding interfaces of group and label",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGroupListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/rule/list": {
            "post": {
                "description": "list alarm rules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "list alarm rules",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetAlertRuleRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAlertRulesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/rule/metrics": {
            "get": {
                "description": "get metrics and PQL in alarm rules",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "get metrics and PQL in alarm rules",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetMetricPQLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/rules": {
            "get": {
                "description": "get basic alarm rules",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "get basic alarm rules",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query alarm rule file name, if empty, return all",
                        "name": "alertRuleFile",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAlertRuleFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alerts/rules/file": {
            "post": {
                "description": "update basic alarm rules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alerts"
                ],
                "summary": "update basic alarm rules",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateAlertRuleRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/alertsinput/enrich/tags/list": {
            "get": {
                "description": "GetTargetTags",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "GetTargetTags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/alert.GetTargetTagsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/config/getTTL": {
            "get": {
                "description": "get TTL",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.config"
                ],
                "summary": "get TTL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTTLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/config/setSingleTableTTL": {
            "post": {
                "description": "configure the TTL of a single table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Api.config"
                ],
                "summary": "configure the TTL of a single table",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SetSingleTTLRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/config/setTTL": {
            "post": {
                "description": "configuration TTL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Api.config"
                ],
                "summary": "configuration TTL",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SetTTLRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/data/datasource": {
            "get": {
                "description": "Gets all datasource.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Gets all datasource.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDatasourceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/data/group": {
            "post": {
                "description": "Get data group.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Get data group.",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/request.GetDataGroupRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetDataGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/data/group/create": {
            "post": {
                "description": "Create a data group.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Create a data group.",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateDataGroupRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/data/group/data": {
            "get": {
                "description": "Get group's datasource.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Get group's datasource.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Data group's id",
                        "name": "groupId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "apm or normal, return all when empty",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetGroupDatasourceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/data/group/delete": {
            "post": {
                "description": "Delete the data group.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Delete the data group.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Data group's id",
                        "name": "groupId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/data/group/operation": {
            "post": {
                "description": "Assign data groups to users or teams, or remove them from data groups.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Assign data groups to users or teams, or remove them from data groups.",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DataGroupOperationRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/data/group/update": {
            "post": {
                "description": "Updates data group.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Updates data group.",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateDataGroupRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/data/sub/group": {
            "get": {
                "description": "Get subject's assigned data group.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Get subject's assigned data group.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The id of authorized subject",
                        "name": "subjectId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The type of authorized subject",
                        "name": "subjectType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "apm or normal, return all if is empty",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.DataGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/data/subs": {
            "get": {
                "description": "Get group's assigned subjects.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Get group's assigned subjects.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "data group's id",
                        "name": "groupId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "subject type that you want to query",
                        "name": "subjectType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.AuthDataGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/data/subs/operation": {
            "post": {
                "description": "Manage group's assigned subject.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Manage group's assigned subject.",
                "parameters": [
                    {
                        "description": "请求信息",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GroupSubsOperationRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/data/user/group": {
            "get": {
                "description": "Get user's assigned data group.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.data"
                ],
                "summary": "Get user's assigned data group.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user's id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "apm or normal, return all if is empty",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.DataGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/health": {
            "get": {
                "description": "for k8s to check backend health status",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "for k8s to check backend health status",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/integration/adapter/update": {
            "get": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.integration"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/integration/cluster/create": {
            "post": {
                "description": "Create Cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "Create Cluster",
                "parameters": [
                    {
                        "description": "Cluster Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/integration.Cluster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "created cluster info",
                        "schema": {
                            "$ref": "#/definitions/integration.Cluster"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/integration/cluster/delete": {
            "get": {
                "description": "DeleteCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "DeleteCluster",
                "parameters": [
                    {
                        "description": "Cluster Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/integration.Cluster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/integration/cluster/get": {
            "get": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.integration"
                ],
                "parameters": [
                    {
                        "description": "请求信息",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/integration.Cluster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/integration.ClusterIntegration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/integration/cluster/install/cmd": {
            "get": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.integration"
                ],
                "parameters": [
                    {
                        "description": "请求信息",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/integration.GetCInstallRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/integration.GetCInstallRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/integration/cluster/install/config": {
            "get": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "API.integration"
                ],
                "parameters": [
                    {
                        "description": "请求信息",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/integration.GetCInstallRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/integration.GetCInstallConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/integration/cluster/list": {
            "get": {
                "description": "ListCluster",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.alertinput"
                ],
                "summary": "ListCluster",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/integration.ListClusterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/integration/cluster/update": {
            "post": {
                "description": "UpdateCluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.integration"
                ],
                "summary": "UpdateCluster",
                "parameters": [
                    {
                        "description": "Cluster Info",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/integration.Cluster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/integration/configuration": {
            "get": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.integration"
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/k8s/namespace/info": {
            "get": {
                "description": "get namespace information",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.k8s"
                ],
                "summary": "get namespace information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/k8s/namespaces": {
            "get": {
                "description": "get all namespace information",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.k8s"
                ],
                "summary": "get all namespace information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/k8s/pod/info": {
            "get": {
                "description": "get pod information",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.k8s"
                ],
                "summary": "get pod information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pod name",
                        "name": "pod",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/k8s/pods": {
            "get": {
                "description": "get all pod information",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.k8s"
                ],
                "summary": "get all pod information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace name",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/chart": {
            "post": {
                "description": "get the log trend chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "get the log trend chart",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LogQueryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogChartResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/context": {
            "post": {
                "description": "get log context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "get log context",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LogQueryContextRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogQueryContextResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/fault/content": {
            "post": {
                "description": "get the contents of the fault site log",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "get the contents of the fault site log",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetFaultLogContentRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetFaultLogContentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/fault/pagelist": {
            "post": {
                "description": "get fault site paging log",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "get fault site paging log",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetFaultLogPageListRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetFaultLogPageListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/index": {
            "post": {
                "description": "analysis field index",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "analysis field index",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LogIndexRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogIndexResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/other": {
            "get": {
                "description": "get external log table",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "get external log table",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OtherTableRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OtherTableResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/other/add": {
            "post": {
                "description": "add external log table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "add external log table",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddOtherTableRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddOtherTableResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/other/delete": {
            "delete": {
                "description": "remove external log table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "remove external log table",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteOtherTableRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DeleteOtherTableResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/other/table": {
            "get": {
                "description": "get external log table information",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "get external log table information",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OtherTableInfoRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.OtherTableInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/query": {
            "post": {
                "description": "query full logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "query all logs",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LogQueryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogQueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/rule/add": {
            "post": {
                "description": "new log table parsing rules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "new log table parsing rules",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddLogParseRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogParseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/rule/delete": {
            "delete": {
                "description": "delete log table parsing rules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "delete log table parsing rules",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteLogParseRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogParseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/rule/get": {
            "get": {
                "description": "get log table parsing rules",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "get log table parsing rules",
                "parameters": [
                    {
                        "type": "string",
                        "description": "database",
                        "name": "dataBase",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Table",
                        "name": "tableName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogParseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/rule/service": {
            "get": {
                "description": "get the application log corresponding to the service",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "get the application log corresponding to the service",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetServiceRouteRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetServiceRouteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/rule/update": {
            "post": {
                "description": "update log table parsing rules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "update log table parsing rules",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateLogParseRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogParseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/log/table": {
            "get": {
                "description": "get log table information",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.log"
                ],
                "summary": "get log table information",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LogTableInfoRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LogTableInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/metric/list": {
            "get": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.metric"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/metric/query": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.metric"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/mock": {
            "get": {
                "description": "xx list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.mock"
                ],
                "summary": "xx list",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "which page",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of displays per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "username",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            },
            "post": {
                "description": "create/edit xx",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.mock"
                ],
                "summary": "create/edit xx",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/mock/{id}": {
            "get": {
                "description": "xx details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.mock"
                ],
                "summary": "xx details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete xx",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.mock"
                ],
                "summary": "delete xx",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/network/podmap": {
            "get": {
                "description": "query pod network call topology and call metrics",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.Network"
                ],
                "summary": "query pod network call topology and call metrics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Start time, in microseconds",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "End time, in microseconds",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace to query, if the value is empty, query all",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Workload to be queried. If the value is empty, all of them will be queried",
                        "name": "workload",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PodMapResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/network/segments": {
            "get": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "API.Network"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "traceId",
                        "name": "traceId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "spanId. If the value is blank, all items are queried",
                        "name": "spanId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SpanSegmentMetricsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/permission/config": {
            "get": {
                "description": "Get user's menu config.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.permission"
                ],
                "summary": "Gets user's menu config and which route can access.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "language",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/permission/feature": {
            "get": {
                "description": "Gets all feature permission.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.permission"
                ],
                "summary": "Gets all feature permission.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "language",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Feature"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/permission/menu/configure": {
            "post": {
                "description": "Configure global menu.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.permission"
                ],
                "summary": "Configure global menu.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "The list of feature's id",
                        "name": "permissionList",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/permission/operation": {
            "post": {
                "description": "Grant or revoke user's permission(feature).",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.permission"
                ],
                "summary": "Grant or revoke user's permission(feature).",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The id of authorized subject",
                        "name": "subjectId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The type of authorized subject: 'role','user','team'",
                        "name": "subjectType",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The type of authorization: 'feature','data'",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "The list of permissions' id",
                        "name": "permissionList",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/permission/sub/feature": {
            "get": {
                "description": "Gets subject's permission.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.permission"
                ],
                "summary": "Gets subject's permission.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "language",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The id of authorized subject",
                        "name": "subjectId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user, role, team",
                        "name": "subjectType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Feature"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/role/create": {
            "post": {
                "description": "Creates a role.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.role"
                ],
                "summary": "Creates a role.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role's name",
                        "name": "roleName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The description of role.",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Role's initial feature permission id list.",
                        "name": "permissionList",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "The id of users which will be granted the role.",
                        "name": "userList",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/role/delete": {
            "post": {
                "description": "Delete a role.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.role"
                ],
                "summary": "Delete a role.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role's id",
                        "name": "roleId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/role/operation": {
            "post": {
                "description": "Grants permission to user",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.role"
                ],
                "summary": "Grant or revoke user's role.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "The id list of role which user has.",
                        "name": "roleList",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/role/roles": {
            "get": {
                "description": "Gets all roles.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.role"
                ],
                "summary": "Gets all roles.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/role/update": {
            "post": {
                "description": "Update role's name and permission.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.role"
                ],
                "summary": "Update role's name and permission.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role's id.",
                        "name": "roleId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role's name",
                        "name": "roleName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The description of role.",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Role's feature permission id list.",
                        "name": "permissionList",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/role/user": {
            "get": {
                "description": "Get user's role.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.role"
                ],
                "summary": "Get user's role.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/alert/events": {
            "get": {
                "description": "get alarm events",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get alarm events",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "query service list",
                        "name": "services",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query the alarm source",
                        "name": "source",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query alarm type",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query alarm name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query alarm ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query alarm status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Paging parameter, current number of pages",
                        "name": "currentPage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination parameter, quantity per page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAlertEventsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/alert/sample/events": {
            "get": {
                "description": "get sampling alarm events",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get sampling alarm events",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query the alarm source",
                        "name": "source",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query alarm type",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query alarm name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query alarm ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Query alarm status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of sample alarms",
                        "name": "sampleCount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetAlertEventsSampleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/descendant/metrics": {
            "get": {
                "description": "get the delay curve data of all downstream services",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the delay curve data of all downstream services",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query step (us)",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingress service name",
                        "name": "entryService",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "entry Endpoint",
                        "name": "entryEndpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.GetDescendantMetricsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/descendant/relevance": {
            "get": {
                "description": "get the dependent node delay correlation degree",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the dependent node delay correlation degree",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query step (us)",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingress service name",
                        "name": "entryService",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "entry Endpoint",
                        "name": "entryEndpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.GetDescendantRelevanceResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/endpoint/list": {
            "get": {
                "description": "get the list of service EndPoint",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the list of service EndPoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/endpoints": {
            "get": {
                "description": "get the list of endpoints services",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the list of endpoints services",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "data group id",
                        "name": "groupId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "step",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "endpoint",
                        "name": "endpointName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sort rule",
                        "name": "sortRule",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ServiceEndPointsRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/entry/endpoints": {
            "get": {
                "description": "get the service entry Endpoint list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the service entry Endpoint list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query step (us)",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Show missing entry",
                        "name": "showMissTop",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.GetServiceEntryEndpointsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/error/instance": {
            "get": {
                "description": "get the error instance",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the error instance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query step (us)",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingress service name",
                        "name": "entryService",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "entry Endpoint",
                        "name": "entryEndpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetErrorInstanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/errorinstance/logs": {
            "get": {
                "description": "get the error instance failure site log",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the error instance failure site log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "instance name",
                        "name": "instance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "hostname",
                        "name": "nodeName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "container name",
                        "name": "containerId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "process number",
                        "name": "pid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/clickhouse.FaultLogResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/getThreshold": {
            "get": {
                "description": "get individual threshold configuration information",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get individual threshold configuration information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "app name",
                        "name": "serviceName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "endpoint",
                        "name": "endpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Threshold level",
                        "name": "level",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/instance/list": {
            "get": {
                "description": "get the list of service instances",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the list of service instances",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/instance/options": {
            "get": {
                "description": "get the drop-down list of service instances",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the drop-down list of service instances",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/model.ServiceInstance"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/instanceinfo/list": {
            "get": {
                "description": "get the list of service instances",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the list of service instances",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/instances": {
            "get": {
                "description": "get the URL instance corresponding to the service",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the URL instance corresponding to the service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "step",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "app name",
                        "name": "serviceName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "endpoint",
                        "name": "endpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.InstancesRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/k8s/events/count": {
            "get": {
                "description": "get K8s events",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get K8s events",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetK8sEventsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/list": {
            "get": {
                "description": "get the list of services",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the list of services",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/log/logs": {
            "get": {
                "description": "get Log fault site log",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get Log fault site log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "instance name",
                        "name": "instance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "hostname",
                        "name": "nodeName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "container name",
                        "name": "containerId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "process number",
                        "name": "pid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/clickhouse.FaultLogResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/log/metrics": {
            "get": {
                "description": "get log related metrics",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get log related metrics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query step (us)",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingress service name",
                        "name": "entryService",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "entry Endpoint",
                        "name": "entryEndpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.GetLogMetricsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/monitor/status": {
            "get": {
                "description": "get the service status monitored by kuma",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the service status monitored by kuma",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetMonitorStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/moreUrl": {
            "get": {
                "description": "get more url list of services",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get more url list of services",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "step",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "app name",
                        "name": "serviceName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "sort logic",
                        "name": "sortRule",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.ServiceDetail"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/namespace/list": {
            "get": {
                "description": "Get monitored namespaces.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "Get monitored namespaces.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetServiceNamespaceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/polaris/infer": {
            "get": {
                "description": "Get Polaris metric Analysis",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "Get Polaris metric Analysis",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query step (us)",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetPolarisInferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/redcharts": {
            "post": {
                "description": "Get services' red charts.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "Get services' red charts.",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetServiceREDChartsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetServiceREDChartsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/relation": {
            "get": {
                "description": "the call relationship between the upstream and downstream service",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the call relationship between the upstream and downstream services",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingress service name",
                        "name": "entryService",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "entry Endpoint",
                        "name": "entryEndpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetServiceEndpointRelationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/ryglight": {
            "get": {
                "description": "get traffic light results",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get traffic light results",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service name",
                        "name": "serviceName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "interface name",
                        "name": "endpointName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ServiceRYGLightRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/servicesAlert": {
            "get": {
                "description": "get the log alarm and status light information of the Service",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the log alarm and status light information of the Service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "step",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "application name",
                        "name": "serviceNames",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "return data content",
                        "name": "returnData",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ServiceAlertRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/setThreshold": {
            "post": {
                "description": "configuration single threshold configuration information",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "configuration single threshold configuration information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "threshold level",
                        "name": "level",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "app name",
                        "name": "serviceName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "endpoint",
                        "name": "endpoint",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "YoY Delay",
                        "name": "latency",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "YoY Error Rate",
                        "name": "errorRate",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Number of requests compared with the same period last year",
                        "name": "tps",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "year-on-year log alarm",
                        "name": "log",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/sql/metrics": {
            "get": {
                "description": "get SQL metrics",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get SQL metrics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query step (us)",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sort method (latency/errorRate/tps)",
                        "name": "sortBy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Paging parameter, current number of pages",
                        "name": "currentPage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination parameter, quantity per page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSQLMetricsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/topology": {
            "get": {
                "description": "get the upstream and downstream topology of the service",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get the upstream and downstream topology of the service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingress service name",
                        "name": "entryService",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "entry Endpoint",
                        "name": "entryEndpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetServiceEndpointTopologyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/trace/logs": {
            "get": {
                "description": "get trace fault site log",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get trace fault site log",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "instance name",
                        "name": "instance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "hostname",
                        "name": "nodeName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "container name",
                        "name": "containerId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "process number",
                        "name": "pid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/clickhouse.FaultLogResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/service/trace/metrics": {
            "get": {
                "description": "get Trace related metrics",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.service"
                ],
                "summary": "get Trace related metrics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query service name",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query Endpoint",
                        "name": "endpoint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query step (us)",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingress service name",
                        "name": "entryService",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "entry Endpoint",
                        "name": "entryEndpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.GetTraceMetricsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/team": {
            "get": {
                "description": "Get teams.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.team"
                ],
                "summary": "Get teams.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team's name",
                        "name": "teamName",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "The list of feature's id",
                        "name": "featureList",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "The list of data group's id",
                        "name": "dataGroupList",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Current page",
                        "name": "currentPage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTeamResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/team/create": {
            "post": {
                "description": "Creates a team.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.team"
                ],
                "summary": "Creates a team.",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTeamRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/team/delete": {
            "post": {
                "description": "Delete a team.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.team"
                ],
                "summary": "Delete a team.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team's id",
                        "name": "teamId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/team/operation": {
            "post": {
                "description": "Assigns a user to teams or removes a user from teams.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.team"
                ],
                "summary": "Assigns a user to teams or removes a user from teams.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "The list of team id.",
                        "name": "teamList",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/team/update": {
            "post": {
                "description": "Update team's information.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.team"
                ],
                "summary": "Update team's information.",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateTeamRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/team/user": {
            "get": {
                "description": "Get team's users.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.team"
                ],
                "summary": "Get team's users.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team's id",
                        "name": "teamId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/team/user/operation": {
            "post": {
                "description": "Assigns users to a team or remove users from a team.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.team"
                ],
                "summary": "Assigns users to a team or remove users from a team.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team's id",
                        "name": "teamId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "The list of users' id.",
                        "name": "userList",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/trace/flame": {
            "get": {
                "description": "get the flame chart data of the specified time period and specified conditions",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.trace"
                ],
                "summary": "get the flame chart data of the specified time period and specified conditions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sample type",
                        "name": "sampleType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "process id",
                        "name": "pid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "thread id",
                        "name": "tid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "hostname",
                        "name": "nodeName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "span id",
                        "name": "spanId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "trace id",
                        "name": "traceId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetFlameDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/trace/flame/process": {
            "get": {
                "description": "get and integrate process-level flame graph data",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.trace"
                ],
                "summary": "get and integrate process-level flame graph data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number of nodes",
                        "name": "maxNodes",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "process id",
                        "name": "pid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "hostname",
                        "name": "nodeName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sample type",
                        "name": "sampleType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetProcessFlameGraphResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/trace/info": {
            "get": {
                "description": "get single link trace details",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.trace"
                ],
                "summary": "get single link trace details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "trace id",
                        "name": "traceId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/trace/onoffcpu": {
            "get": {
                "description": "get span execution consumption",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.trace"
                ],
                "summary": "get span execution consumption",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "process id",
                        "name": "pid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "node name",
                        "name": "nodeName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetOnOffCPUResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/trace/pagelist": {
            "post": {
                "description": "to query the trace paging list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.trace"
                ],
                "summary": "to query the trace paging list",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetTracePageListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTracePageListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/trace/pagelist/filter/value": {
            "post": {
                "description": "query the available values of the specified filter",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.trace"
                ],
                "summary": "query the available values of the specified filter",
                "parameters": [
                    {
                        "description": "Request information",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetTraceFilterValueRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTraceFilterValueResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/trace/pagelist/filters": {
            "get": {
                "description": "the available filters for querying the Trace list",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.trace"
                ],
                "summary": "the available filters for querying the Trace list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query start time",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "query end time",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to update the available filters immediately based on the time entered by the user",
                        "name": "needUpdate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetTraceFiltersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/create": {
            "post": {
                "description": "Create a user.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Create a user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Confirm password",
                        "name": "confirmPassword",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "role id",
                        "name": "roleList",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "mailbox",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Phone number",
                        "name": "phone",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "organization",
                        "name": "corporation",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/info": {
            "get": {
                "description": "Get user's info.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Get user's info.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/list": {
            "get": {
                "description": "Get user list.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Get user list.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Current page",
                        "name": "currentPage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The size of page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Role id list",
                        "name": "roleList",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Team id list",
                        "name": "teamList",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "组织",
                        "name": "corporation",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetUserListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/logout": {
            "post": {
                "description": "Logout",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "accessToken",
                        "name": "accessToken",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "refreshToken",
                        "name": "refreshToken",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/refresh": {
            "get": {
                "description": "Refresh accessToken",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Refresh accessToken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer refreshToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/remove": {
            "post": {
                "description": "Remove a user.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Remove a user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/reset": {
            "post": {
                "description": "Reset user's password.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Reset user's password.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New password",
                        "name": "newPassword",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Confirm password",
                        "name": "confirmPassword",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/team": {
            "get": {
                "description": "Get user's team.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Get user's team.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's is",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Team"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/update/email": {
            "post": {
                "description": "Update email.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Update email.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/update/info": {
            "post": {
                "description": "Update user's info.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Update user's info.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "The list of user's role.",
                        "name": "roleList",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Corporation",
                        "name": "corporation",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Phone number",
                        "name": "phone",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/update/password": {
            "post": {
                "description": "Update password.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Update password.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Original password",
                        "name": "oldPassword",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New password",
                        "name": "newPassword",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Confirm password",
                        "name": "confirmPassword",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/update/phone": {
            "post": {
                "description": "Update phone number",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Update phone number",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Phone number",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        },
        "/api/user/update/self": {
            "post": {
                "description": "Update self info.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API.user"
                ],
                "summary": "Update self info.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User's id",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Corporation",
                        "name": "corporation",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Phone number",
                        "name": "phone",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Bearer accessToken",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/code.Failure"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "alert.AEventWithWRecord": {
            "type": "object",
            "properties": {
                "alertId": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "enrichTags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isValid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "receivedTime": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "sourceId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "description": "HACK the existing clickhouse query uses ` + "`" + `tags` + "`" + ` as the filter field\nso enrichTags in ch is named as 'tags' to filter new alertInput",
                    "type": "object",
                    "additionalProperties": {}
                },
                "updateTime": {
                    "type": "string"
                },
                "workflowId": {
                    "type": "string"
                },
                "workflowName": {
                    "type": "string"
                },
                "workflowParams": {
                    "$ref": "#/definitions/alert.WorkflowParams"
                },
                "workflowRunId": {
                    "type": "string"
                }
            }
        },
        "alert.AlerEnrichRuleConfigRequest": {
            "type": "object",
            "properties": {
                "enrichRuleConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alert.AlertEnrichRuleVO"
                    }
                },
                "setAsDefault": {
                    "type": "boolean"
                },
                "sourceId": {
                    "type": "string"
                }
            }
        },
        "alert.AlertEnrichCondition": {
            "type": "object",
            "properties": {
                "expr": {
                    "type": "string"
                },
                "fromField": {
                    "type": "string"
                },
                "operation": {
                    "description": "support match,not match,gt,lt,ge,le,eq",
                    "type": "string"
                }
            }
        },
        "alert.AlertEnrichRuleVO": {
            "type": "object",
            "properties": {
                "conditions": {
                    "description": "--------------- conditions ----------------",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alert.AlertEnrichCondition"
                    }
                },
                "customTag": {
                    "type": "string"
                },
                "enrichRuleId": {
                    "type": "string"
                },
                "fromField": {
                    "type": "string"
                },
                "fromRegex": {
                    "type": "string"
                },
                "rType": {
                    "type": "string"
                },
                "schema": {
                    "description": "---------------- schemaMapping --------------",
                    "type": "string"
                },
                "schemaSource": {
                    "type": "string"
                },
                "schemaTargets": {
                    "description": "--------------- schemaMapping -------------",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alert.AlertEnrichSchemaTarget"
                    }
                },
                "sourceId": {
                    "type": "string"
                },
                "targetTagId": {
                    "description": "---------------- tagMapping -----------------",
                    "type": "integer"
                }
            }
        },
        "alert.AlertEnrichSchemaTarget": {
            "type": "object",
            "properties": {
                "customTag": {
                    "type": "string"
                },
                "schemaField": {
                    "type": "string"
                },
                "targetTagId": {
                    "type": "integer"
                }
            }
        },
        "alert.AlertSchemaRequest": {
            "type": "object",
            "properties": {
                "schema": {
                    "type": "string"
                }
            }
        },
        "alert.AlertSource": {
            "type": "object",
            "properties": {
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/integration.Cluster"
                    }
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceName": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            }
        },
        "alert.CheckSchemaIsUsedReponse": {
            "type": "object",
            "properties": {
                "alertSourceNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isUsing": {
                    "type": "boolean"
                }
            }
        },
        "alert.CreateSchemaRequest": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fullRows": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "schema": {
                    "type": "string"
                }
            }
        },
        "alert.DefaultAlertEnrichRuleRequest": {
            "type": "object",
            "properties": {
                "sourceType": {
                    "type": "string"
                }
            }
        },
        "alert.DefaultAlertEnrichRuleResponse": {
            "type": "object",
            "properties": {
                "enrichRuleConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alert.AlertEnrichRuleVO"
                    }
                },
                "sourceType": {
                    "type": "string"
                }
            }
        },
        "alert.GetAlertEnrichRuleResponse": {
            "type": "object",
            "properties": {
                "enrichRuleConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alert.AlertEnrichRuleVO"
                    }
                },
                "sourceId": {
                    "type": "string"
                }
            }
        },
        "alert.GetSchemaColumnsResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "alert.GetSchemaDataReponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rows": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "alert.GetTargetTagsResponse": {
            "type": "object",
            "properties": {
                "targetTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alert.TargetTag"
                    }
                }
            }
        },
        "alert.ListAlertSourceResponse": {
            "type": "object",
            "properties": {
                "alertSources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alert.AlertSource"
                    }
                }
            }
        },
        "alert.ListSchemaResponse": {
            "type": "object",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "alert.ListSchemaWithColumnsResponse": {
            "type": "object",
            "properties": {
                "schemas": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "alert.SetDefaultAlertEnrichRuleRequest": {
            "type": "object",
            "properties": {
                "enrichRuleConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alert.AlertEnrichRuleVO"
                    }
                },
                "sourceType": {
                    "type": "string"
                }
            }
        },
        "alert.SourceFrom": {
            "type": "object",
            "properties": {
                "sourceId": {
                    "type": "string"
                },
                "sourceName": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            }
        },
        "alert.TargetTag": {
            "type": "object",
            "properties": {
                "describe": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "tagName": {
                    "type": "string"
                },
                "targetTag": {
                    "type": "string"
                }
            }
        },
        "alert.UpdateSchemaDataRequest": {
            "type": "object",
            "properties": {
                "clearAll": {
                    "type": "boolean"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "newRows": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "schema": {
                    "type": "string"
                },
                "updateRows": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "alert.WorkflowParams": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "integer"
                },
                "nodeIp": {
                    "type": "string"
                },
                "nodeName": {
                    "type": "string"
                },
                "params": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                }
            }
        },
        "amconfig.DingTalkConfig": {
            "type": "object",
            "properties": {
                "secret": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "amconfig.EmailConfig": {
            "type": "object",
            "properties": {
                "authIdentity": {
                    "type": "string"
                },
                "authPassword": {
                    "type": "string"
                },
                "authPasswordFile": {
                    "type": "string"
                },
                "authSecret": {
                    "type": "string"
                },
                "authUsername": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hello": {
                    "type": "string"
                },
                "html": {
                    "type": "string"
                },
                "requireTls": {
                    "type": "boolean"
                },
                "sendResolved": {
                    "type": "boolean"
                },
                "smarthost": {
                    "$ref": "#/definitions/amconfig.HostPort"
                },
                "text": {
                    "type": "string"
                },
                "tlsConfig": {
                    "$ref": "#/definitions/httpconfig.TLSConfig"
                },
                "to": {
                    "description": "Email address to notify.",
                    "type": "string"
                }
            }
        },
        "amconfig.HostPort": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                }
            }
        },
        "amconfig.Receiver": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "dingTalkConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/amconfig.DingTalkConfig"
                    }
                },
                "emailConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/amconfig.EmailConfig"
                    }
                },
                "name": {
                    "description": "A unique identifier for this receiver.",
                    "type": "string"
                },
                "webhookConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/amconfig.WebhookConfig"
                    }
                },
                "wechatConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/amconfig.WechatConfig"
                    }
                }
            }
        },
        "amconfig.URL": {
            "type": "object"
        },
        "amconfig.WebhookConfig": {
            "type": "object",
            "properties": {
                "httpConfig": {
                    "$ref": "#/definitions/httpconfig.HTTPClientConfig"
                },
                "maxAlerts": {
                    "description": "MaxAlerts is the maximum number of alerts to be sent per webhook message.\nAlerts exceeding this threshold will be truncated. Setting this to 0\nallows an unlimited number of alerts.",
                    "type": "integer"
                },
                "sendResolved": {
                    "type": "boolean"
                },
                "url": {
                    "description": "URL to send POST request to.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/amconfig.URL"
                        }
                    ]
                },
                "urlFile": {
                    "type": "string"
                }
            }
        },
        "amconfig.WechatConfig": {
            "type": "object",
            "properties": {
                "agentId": {
                    "type": "string"
                },
                "apiSecret": {
                    "type": "string"
                },
                "apiUrl": {
                    "$ref": "#/definitions/amconfig.URL"
                },
                "corpId": {
                    "type": "string"
                },
                "httpConfig": {
                    "$ref": "#/definitions/httpconfig.HTTPClientConfig"
                },
                "message": {
                    "type": "string"
                },
                "messageType": {
                    "type": "string"
                },
                "sendResolved": {
                    "type": "boolean"
                },
                "toParty": {
                    "type": "string"
                },
                "toTag": {
                    "type": "string"
                },
                "toUser": {
                    "type": "string"
                }
            }
        },
        "clickhouse.AlertEventSample": {
            "type": "object",
            "properties": {
                "alarmCount": {
                    "type": "integer"
                },
                "alertKey": {
                    "type": "string"
                },
                "createTime": {
                    "description": "fault trigger time",
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "endTime": {
                    "description": "Recovery time (only present at recovery)",
                    "type": "string"
                },
                "group": {
                    "description": "Fault group information",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "raw_tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "receivedTime": {
                    "description": "Failure event reception time (used to record data connection, no business meaning)",
                    "type": "string"
                },
                "severity": {
                    "$ref": "#/definitions/model.SeverityLevel"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.Status"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updateTime": {
                    "description": "Last time the fault occurred",
                    "type": "string"
                }
            }
        },
        "clickhouse.FaultLogResult": {
            "type": "object",
            "properties": {
                "containerId": {
                    "type": "string"
                },
                "endTime": {
                    "type": "integer"
                },
                "endpoint": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "nodeName": {
                    "type": "string"
                },
                "pid": {
                    "type": "integer"
                },
                "podName": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "traceId": {
                    "type": "string"
                }
            }
        },
        "clickhouse.LogContent": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "clickhouse.Logs": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clickhouse.LogContent"
                    }
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "clickhouse.PagedAlertEvent": {
            "type": "object",
            "properties": {
                "createTime": {
                    "description": "fault trigger time",
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "endTime": {
                    "description": "Recovery time (only present at recovery)",
                    "type": "string"
                },
                "group": {
                    "description": "Fault group information",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "raw_tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "receivedTime": {
                    "description": "Failure event reception time (used to record data connection, no business meaning)",
                    "type": "string"
                },
                "severity": {
                    "$ref": "#/definitions/model.SeverityLevel"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.Status"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updateTime": {
                    "description": "Last time the fault occurred",
                    "type": "string"
                }
            }
        },
        "clickhouse.ProfilingEvent": {
            "type": "object",
            "properties": {
                "cpuEvents": {
                    "type": "string"
                },
                "endTime": {
                    "type": "integer"
                },
                "innerCalls": {
                    "type": "string"
                },
                "javaFutexEvents": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "offset": {
                    "type": "integer"
                },
                "pid": {
                    "type": "integer"
                },
                "spans": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "threadName": {
                    "description": "thread name table in labels",
                    "type": "string"
                },
                "tid": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "transactionIds": {
                    "type": "string"
                }
            }
        },
        "clickhouse.QueryTraceResult": {
            "type": "object",
            "properties": {
                "apmType": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "endpoint": {
                    "type": "string"
                },
                "flags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "instanceId": {
                    "type": "string"
                },
                "isError": {
                    "type": "boolean"
                },
                "isMutated": {
                    "description": "whether the delay changes abruptly",
                    "type": "integer"
                },
                "isSlow": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metrics": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "mutatedValue": {
                    "type": "integer"
                },
                "pid": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "spanId": {
                    "type": "string"
                },
                "thresholdMultiple": {
                    "type": "number"
                },
                "thresholdValue": {
                    "type": "number"
                },
                "tid": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "integer"
                },
                "traceId": {
                    "type": "string"
                }
            }
        },
        "clickhouse.SpanTraceOptions": {
            "type": "object",
            "properties": {
                "dataType": {
                    "$ref": "#/definitions/request.DataType"
                },
                "key": {
                    "type": "string"
                },
                "operation": {
                    "$ref": "#/definitions/request.Operation"
                },
                "options": {},
                "parentField": {
                    "$ref": "#/definitions/request.ParentField"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "code.Failure": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "business code",
                    "type": "string"
                },
                "message": {
                    "description": "error message",
                    "type": "string"
                }
            }
        },
        "database.AlertMetricsData": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pql": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "database.AuthDataGroup": {
            "type": "object",
            "properties": {
                "team": {
                    "$ref": "#/definitions/database.Team"
                },
                "type": {
                    "description": "view, edit",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/database.User"
                }
            }
        },
        "database.DataGroup": {
            "type": "object",
            "properties": {
                "authType": {
                    "type": "string"
                },
                "datasourceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.DatasourceGroup"
                    }
                },
                "description": {
                    "description": "The description of data group.",
                    "type": "string"
                },
                "groupId": {
                    "type": "integer"
                },
                "groupName": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "database.DatasourceGroup": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "apm or normal",
                    "type": "string"
                },
                "datasource": {
                    "type": "string"
                },
                "type": {
                    "description": "service or namespace",
                    "type": "string"
                }
            }
        },
        "database.Feature": {
            "type": "object",
            "properties": {
                "featureId": {
                    "type": "integer"
                },
                "featureName": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "database.InsertPage": {
            "type": "object",
            "properties": {
                "pageId": {
                    "type": "integer"
                },
                "type": {
                    "description": "For now it's grafana or jaeger.",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "database.MenuItem": {
            "type": "object",
            "properties": {
                "abbreviation": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "itemId": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "label": {
                    "description": "AKA item name.",
                    "type": "string"
                },
                "router": {
                    "description": "Frontend router.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/database.Router"
                        }
                    ]
                }
            }
        },
        "database.Role": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "roleId": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                }
            }
        },
        "database.Router": {
            "type": "object",
            "properties": {
                "hideTimeSelector": {
                    "type": "boolean"
                },
                "page": {
                    "$ref": "#/definitions/database.InsertPage"
                },
                "routerId": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "database.Team": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "featureList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Feature"
                    }
                },
                "teamId": {
                    "type": "integer"
                },
                "teamName": {
                    "type": "string"
                },
                "userList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.User"
                    }
                }
            }
        },
        "database.User": {
            "type": "object",
            "properties": {
                "corporation": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "featureList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Feature"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "roleList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Role"
                    }
                },
                "teamList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Team"
                    }
                },
                "userId": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "httpconfig.Authorization": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "string"
                },
                "credentialsFile": {
                    "type": "string"
                },
                "credentialsRef": {
                    "description": "CredentialsRef is the name of the secret within the secret manager to use as credentials.",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "httpconfig.BasicAuth": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "passwordFile": {
                    "type": "string"
                },
                "passwordRef": {
                    "description": "PasswordRef is the name of the secret within the secret manager to use as the password.",
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "usernameFile": {
                    "type": "string"
                },
                "usernameRef": {
                    "description": "UsernameRef is the name of the secret within the secret manager to use as the username.",
                    "type": "string"
                }
            }
        },
        "httpconfig.HTTPClientConfig": {
            "type": "object",
            "properties": {
                "authorization": {
                    "description": "The HTTP authorization credentials for the targets.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/httpconfig.Authorization"
                        }
                    ]
                },
                "basicAuth": {
                    "description": "The HTTP basic authentication credentials for the targets.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/httpconfig.BasicAuth"
                        }
                    ]
                },
                "bearerToken": {
                    "description": "The bearer token for the targets. Deprecated in favour of\nAuthorization.Credentials.",
                    "type": "string"
                },
                "bearerTokenFile": {
                    "description": "The bearer token file for the targets. Deprecated in favour of\nAuthorization.CredentialsFile.",
                    "type": "string"
                },
                "enableHttp2": {
                    "description": "EnableHTTP2 specifies whether the client should configure HTTP2.\nThe omitempty flag is not set, because it would be hidden from the\nmarshalled configuration when set to false.",
                    "type": "boolean"
                },
                "followRedirects": {
                    "description": "FollowRedirects specifies whether the client should follow HTTP 3xx redirects.\nThe omitempty flag is not set, because it would be hidden from the\nmarshalled configuration when set to false.",
                    "type": "boolean"
                },
                "httpHeaders": {
                    "description": "HTTPHeaders specify headers to inject in the requests. Those headers\ncould be marshalled back to the users.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/httpconfig.Headers"
                        }
                    ]
                },
                "noProxy": {
                    "description": "NoProxy contains addresses that should not use a proxy.",
                    "type": "string"
                },
                "oauth2": {
                    "description": "The OAuth2 client credentials used to fetch a token for the targets.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/httpconfig.OAuth2"
                        }
                    ]
                },
                "proxyConnectHeader": {
                    "description": "ProxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests. Assume that at least _some_ of\nthese headers are going to contain secrets and use Secret as the\nvalue type instead of string.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/httpconfig.ProxyHeader"
                        }
                    ]
                },
                "proxyFromEnvironment": {
                    "description": "ProxyFromEnvironment makes use of net/http ProxyFromEnvironment function\nto determine proxies.",
                    "type": "boolean"
                },
                "proxyUrl": {
                    "description": "HTTP proxy server to use to connect to the targets.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/httpconfig.URL"
                        }
                    ]
                },
                "tlsConfig": {
                    "description": "TLSConfig to use to connect to the targets.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/httpconfig.TLSConfig"
                        }
                    ]
                }
            }
        },
        "httpconfig.Header": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "httpconfig.Headers": {
            "type": "object",
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/httpconfig.Header"
                    }
                }
            }
        },
        "httpconfig.OAuth2": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientSecretFile": {
                    "type": "string"
                },
                "clientSecretRef": {
                    "description": "ClientSecretRef is the name of the secret within the secret manager to use as the client\nsecret.",
                    "type": "string"
                },
                "endpointParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "noProxy": {
                    "description": "NoProxy contains addresses that should not use a proxy.",
                    "type": "string"
                },
                "proxyConnectHeader": {
                    "description": "ProxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests. Assume that at least _some_ of\nthese headers are going to contain secrets and use Secret as the\nvalue type instead of string.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/httpconfig.ProxyHeader"
                        }
                    ]
                },
                "proxyFromEnvironment": {
                    "description": "ProxyFromEnvironment makes use of net/http ProxyFromEnvironment function\nto determine proxies.",
                    "type": "boolean"
                },
                "proxyUrl": {
                    "description": "HTTP proxy server to use to connect to the targets.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/httpconfig.URL"
                        }
                    ]
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tlsconfig": {
                    "$ref": "#/definitions/httpconfig.TLSConfig"
                },
                "tokenUrl": {
                    "type": "string"
                }
            }
        },
        "httpconfig.ProxyHeader": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "httpconfig.TLSConfig": {
            "type": "object",
            "properties": {
                "ca": {
                    "description": "Text of the CA cert to use for the targets.",
                    "type": "string"
                },
                "caFile": {
                    "description": "The CA cert to use for the targets.",
                    "type": "string"
                },
                "caRef": {
                    "description": "CARef is the name of the secret within the secret manager to use as the CA cert for the\ntargets.",
                    "type": "string"
                },
                "cert": {
                    "description": "Text of the client cert file for the targets.",
                    "type": "string"
                },
                "certFile": {
                    "description": "The client cert file for the targets.",
                    "type": "string"
                },
                "certRef": {
                    "description": "CertRef is the name of the secret within the secret manager to use as the client cert for\nthe targets.",
                    "type": "string"
                },
                "insecureSkipVerify": {
                    "description": "Disable target certificate validation.",
                    "type": "boolean"
                },
                "key": {
                    "description": "Text of the client key file for the targets.",
                    "type": "string"
                },
                "keyFile": {
                    "description": "The client key file for the targets.",
                    "type": "string"
                },
                "keyRef": {
                    "description": "KeyRef is the name of the secret within the secret manager to use as the client key for\nthe targets.",
                    "type": "string"
                },
                "maxVersion": {
                    "description": "Maximum TLS version.",
                    "type": "integer"
                },
                "minVersion": {
                    "description": "Minimum TLS version.",
                    "type": "integer"
                },
                "serverName": {
                    "description": "Used to verify the hostname for the targets.",
                    "type": "string"
                }
            }
        },
        "httpconfig.URL": {
            "type": "object"
        },
        "integration.APOCollector": {
            "type": "object",
            "properties": {
                "collectorAddr": {
                    "type": "string"
                },
                "collectorGatewayAddr": {
                    "type": "string"
                },
                "ports": {
                    "$ref": "#/definitions/integration.CollectorGatewayPorts"
                }
            }
        },
        "integration.ArmsConfig": {
            "type": "object",
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "accessSecret": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                }
            }
        },
        "integration.ClickhouseConfig": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cluster": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "password": {
                    "description": "Encrypt in B64",
                    "type": "string"
                },
                "replication": {
                    "type": "boolean"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "integration.Cluster": {
            "type": "object",
            "properties": {
                "apoCollector": {
                    "$ref": "#/definitions/integration.APOCollector"
                },
                "clusterType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "integration.ClusterIntegration": {
            "type": "object",
            "properties": {
                "apoCollector": {
                    "$ref": "#/definitions/integration.APOCollector"
                },
                "clusterType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "log": {
                    "$ref": "#/definitions/integration.LogIntegration"
                },
                "metric": {
                    "$ref": "#/definitions/integration.MetricIntegration"
                },
                "name": {
                    "type": "string"
                },
                "trace": {
                    "$ref": "#/definitions/integration.TraceIntegration"
                }
            }
        },
        "integration.CollectorGatewayPorts": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "integration.ElasticConfig": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "integration.GetCInstallConfigResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "integration.GetCInstallRequest": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                }
            }
        },
        "integration.HuaweiConfig": {
            "type": "object",
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "accessSecret": {
                    "type": "string"
                }
            }
        },
        "integration.JSONField-integration_LogAPI": {
            "type": "object",
            "properties": {
                "obj": {
                    "$ref": "#/definitions/integration.LogAPI"
                }
            }
        },
        "integration.JSONField-integration_LogSelfCollectConfig": {
            "type": "object",
            "properties": {
                "obj": {
                    "$ref": "#/definitions/integration.LogSelfCollectConfig"
                }
            }
        },
        "integration.JSONField-integration_MetricAPI": {
            "type": "object",
            "properties": {
                "obj": {
                    "$ref": "#/definitions/integration.MetricAPI"
                }
            }
        },
        "integration.JSONField-integration_TraceAPI": {
            "type": "object",
            "properties": {
                "obj": {
                    "$ref": "#/definitions/integration.TraceAPI"
                }
            }
        },
        "integration.JSONField-integration_TraceSelfCollectConfig": {
            "type": "object",
            "properties": {
                "obj": {
                    "$ref": "#/definitions/integration.TraceSelfCollectConfig"
                }
            }
        },
        "integration.JaegerConfig": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "integration.ListClusterResponse": {
            "type": "object",
            "properties": {
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/integration.Cluster"
                    }
                }
            }
        },
        "integration.LogAPI": {
            "type": "object",
            "properties": {
                "clickhouse": {
                    "$ref": "#/definitions/integration.ClickhouseConfig"
                }
            }
        },
        "integration.LogIntegration": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "dbType": {
                    "type": "string"
                },
                "logAPI": {
                    "$ref": "#/definitions/integration.JSONField-integration_LogAPI"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "selfCollectConfig": {
                    "$ref": "#/definitions/integration.JSONField-integration_LogSelfCollectConfig"
                }
            }
        },
        "integration.LogSelfCollectConfig": {
            "type": "object",
            "properties": {
                "mode": {
                    "description": "full,abnormal",
                    "type": "string"
                }
            }
        },
        "integration.MetricAPI": {
            "type": "object",
            "properties": {
                "victoriametric": {
                    "$ref": "#/definitions/integration.VictoriaMetricConfig"
                }
            }
        },
        "integration.MetricIntegration": {
            "type": "object",
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "dsType": {
                    "type": "string"
                },
                "metricAPI": {
                    "$ref": "#/definitions/integration.JSONField-integration_MetricAPI"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "integration.Nbs3Config": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "integration.PinpointConfig": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "integration.SkywalkingConfig": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "integration.TraceAPI": {
            "type": "object",
            "properties": {
                "arms": {
                    "$ref": "#/definitions/integration.ArmsConfig"
                },
                "elastic": {
                    "$ref": "#/definitions/integration.ElasticConfig"
                },
                "huawei": {
                    "$ref": "#/definitions/integration.HuaweiConfig"
                },
                "jaeger": {
                    "$ref": "#/definitions/integration.JaegerConfig"
                },
                "nbs3": {
                    "$ref": "#/definitions/integration.Nbs3Config"
                },
                "pinpoint": {
                    "$ref": "#/definitions/integration.PinpointConfig"
                },
                "skywalking": {
                    "$ref": "#/definitions/integration.SkywalkingConfig"
                },
                "timeout": {
                    "description": "Second",
                    "type": "integer"
                }
            }
        },
        "integration.TraceIntegration": {
            "type": "object",
            "properties": {
                "apmType": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "mode": {
                    "type": "string"
                },
                "selfCollectConfig": {
                    "$ref": "#/definitions/integration.JSONField-integration_TraceSelfCollectConfig"
                },
                "traceAPI": {
                    "$ref": "#/definitions/integration.JSONField-integration_TraceAPI"
                }
            }
        },
        "integration.TraceSelfCollectConfig": {
            "type": "object",
            "properties": {
                "instrumentAll": {
                    "type": "boolean"
                },
                "instrumentDisabledNS": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instrumentNS": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "integration.VictoriaMetricConfig": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "serverURL": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.AlertDetail": {
            "type": "object",
            "properties": {
                "alertMessage": {
                    "type": "string"
                },
                "alertObject": {
                    "type": "string"
                },
                "alertReason": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "model.AlertReason": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/model.AlertDetail"
                }
            }
        },
        "model.Datasource": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "normal or apm",
                    "type": "string"
                },
                "datasource": {
                    "description": "namespaceName or serviceName",
                    "type": "string"
                },
                "nested": {
                    "description": "Nested datasource (namespace service belongs to or service under namespace)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "namespace or service",
                    "type": "string"
                }
            }
        },
        "model.ModifyTableTTLMap": {
            "type": "object",
            "properties": {
                "TTLExpression": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "originalDays": {
                    "type": "integer"
                }
            }
        },
        "model.Pagination": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "description": "current page number",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "number of entries per page",
                    "type": "integer"
                },
                "total": {
                    "description": "total number of records",
                    "type": "integer"
                }
            }
        },
        "model.ServiceInstance": {
            "type": "object",
            "properties": {
                "containerId": {
                    "description": "container ID",
                    "type": "string"
                },
                "nodeIp": {
                    "type": "string"
                },
                "nodeName": {
                    "description": "hostname",
                    "type": "string"
                },
                "pid": {
                    "description": "process number",
                    "type": "integer"
                },
                "podName": {
                    "description": "Pod name",
                    "type": "string"
                },
                "service": {
                    "description": "service name",
                    "type": "string"
                }
            }
        },
        "model.SeverityLevel": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "SeverityLevelUnknown",
                "SeverityLevelInfo",
                "SeverityLevelWarning",
                "SeverityLevelError",
                "SeverityLevelCritical"
            ]
        },
        "model.Status": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "StatusResolved",
                "StatusFiring"
            ]
        },
        "model.ToplogyRelation": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "isTraced": {
                    "type": "boolean"
                },
                "parentEndpoint": {
                    "type": "string"
                },
                "parentService": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "system": {
                    "type": "string"
                }
            }
        },
        "model.TopologyNode": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "isTraced": {
                    "type": "boolean"
                },
                "service": {
                    "type": "string"
                },
                "system": {
                    "type": "string"
                }
            }
        },
        "prometheus.MetricsPoint": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "description": "time (microseconds)",
                    "type": "integer"
                },
                "value": {
                    "description": "value",
                    "type": "number"
                }
            }
        },
        "request.AddAlertManagerConfigReceiver": {
            "type": "object",
            "properties": {
                "amConfigFile": {
                    "type": "string"
                },
                "amConfigReceiver": {
                    "$ref": "#/definitions/amconfig.Receiver"
                },
                "oldName": {
                    "type": "string"
                },
                "type": {
                    "description": "receiver type",
                    "type": "string"
                }
            }
        },
        "request.AddAlertRuleRequest": {
            "type": "object",
            "properties": {
                "alertRule": {
                    "$ref": "#/definitions/request.AlertRule"
                },
                "alertRuleFile": {
                    "type": "string"
                }
            }
        },
        "request.AddLogParseRequest": {
            "type": "object",
            "properties": {
                "isStructured": {
                    "type": "boolean"
                },
                "logTable": {
                    "$ref": "#/definitions/request.LogTable"
                },
                "parseInfo": {
                    "type": "string"
                },
                "parseName": {
                    "type": "string"
                },
                "parseRule": {
                    "type": "string"
                },
                "routeRule": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "serviceName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tableFields": {
                    "description": "custom table fields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.Field"
                    }
                }
            }
        },
        "request.AddOtherTableRequest": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "dataBase": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "logField": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                },
                "timeField": {
                    "type": "string"
                }
            }
        },
        "request.Alert": {
            "type": "object",
            "properties": {
                "annotations": {
                    "$ref": "#/definitions/request.KV"
                },
                "endsAt": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "generatorURL": {
                    "type": "string"
                },
                "labels": {
                    "$ref": "#/definitions/request.KV"
                },
                "startsAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "request.AlertEventSearchFilter": {
            "type": "object",
            "properties": {
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.AlertEventSearchRequest": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "integer"
                },
                "filter": {
                    "$ref": "#/definitions/request.AlertEventSearchFilter"
                },
                "pagination": {
                    "$ref": "#/definitions/model.Pagination"
                },
                "sortBy": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                }
            }
        },
        "request.AlertRule": {
            "type": "object",
            "required": [
                "alert",
                "group"
            ],
            "properties": {
                "alert": {
                    "type": "string"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "expr": {
                    "type": "string"
                },
                "for": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "keepFiringFor": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "record": {
                    "type": "string"
                }
            }
        },
        "request.AuthDataGroup": {
            "type": "object",
            "properties": {
                "subjectId": {
                    "type": "integer"
                },
                "type": {
                    "description": "edit or view",
                    "type": "string"
                }
            }
        },
        "request.BufferEngineConfig": {
            "type": "object",
            "properties": {
                "maxBytes": {
                    "type": "integer"
                },
                "maxRows": {
                    "type": "integer"
                },
                "maxTime": {
                    "type": "integer"
                },
                "minBytes": {
                    "type": "integer"
                },
                "minRows": {
                    "type": "integer"
                },
                "minTime": {
                    "type": "integer"
                },
                "numLayers": {
                    "type": "integer"
                }
            }
        },
        "request.CreateDataGroupRequest": {
            "type": "object",
            "required": [
                "groupName"
            ],
            "properties": {
                "datasourceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Datasource"
                    }
                },
                "description": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                }
            }
        },
        "request.CreateTeamRequest": {
            "type": "object",
            "required": [
                "teamName"
            ],
            "properties": {
                "dataGroupPermission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.DataGroupPermission"
                    }
                },
                "description": {
                    "type": "string"
                },
                "featureList": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "teamName": {
                    "type": "string"
                },
                "userList": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "request.DataGroupOperationRequest": {
            "type": "object",
            "required": [
                "subjectId",
                "subjectType"
            ],
            "properties": {
                "dataGroupPermission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.DataGroupPermission"
                    }
                },
                "subjectId": {
                    "type": "integer"
                },
                "subjectType": {
                    "type": "string"
                }
            }
        },
        "request.DataGroupPermission": {
            "type": "object",
            "required": [
                "groupId",
                "type"
            ],
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.DataType": {
            "type": "string",
            "enum": [
                "int64",
                "uint32",
                "uint64",
                "string",
                "bool"
            ],
            "x-enum-varnames": [
                "I64Column",
                "U32Column",
                "U64Column",
                "StringColumn",
                "BoolColumn"
            ]
        },
        "request.DeleteAlertManagerConfigReceiverRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "amConfigFile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.DeleteAlertRuleRequest": {
            "type": "object",
            "required": [
                "alert",
                "group"
            ],
            "properties": {
                "alert": {
                    "type": "string"
                },
                "alertRuleFile": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                }
            }
        },
        "request.DeleteLogParseRequest": {
            "type": "object",
            "properties": {
                "dataBase": {
                    "type": "string"
                },
                "parseName": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "request.DeleteOtherTableRequest": {
            "type": "object",
            "properties": {
                "dataBase": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "request.Field": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.ForwardToDingTalkRequest": {
            "type": "object",
            "properties": {
                "ExternalURL": {
                    "type": "string"
                },
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.Alert"
                    }
                },
                "commonAnnotations": {
                    "$ref": "#/definitions/request.KV"
                },
                "commonLabels": {
                    "$ref": "#/definitions/request.KV"
                },
                "groupLabels": {
                    "$ref": "#/definitions/request.KV"
                },
                "receiver": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "truncatedAlerts": {
                    "type": "integer"
                }
            }
        },
        "request.GetAlertManagerConfigReceverRequest": {
            "type": "object",
            "properties": {
                "amConfigFile": {
                    "type": "string"
                },
                "currentPage": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pageSize": {
                    "type": "integer"
                },
                "rType": {
                    "type": "string"
                },
                "refreshCache": {
                    "type": "boolean"
                }
            }
        },
        "request.GetAlertRuleRequest": {
            "type": "object",
            "properties": {
                "alert": {
                    "type": "string"
                },
                "alertRuleFile": {
                    "type": "string"
                },
                "currentPage": {
                    "type": "integer"
                },
                "group": {
                    "type": "string"
                },
                "keyword": {
                    "type": "string"
                },
                "pageSize": {
                    "type": "integer"
                },
                "refreshCache": {
                    "type": "boolean"
                },
                "severity": {
                    "description": "alarm level info warning...",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.GetDataGroupRequest": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "datasourceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Datasource"
                    }
                },
                "groupName": {
                    "type": "string"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "request.GetFaultLogContentRequest": {
            "type": "object",
            "properties": {
                "containerId": {
                    "type": "string"
                },
                "endTime": {
                    "type": "integer"
                },
                "endpoint": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "nodeName": {
                    "type": "string"
                },
                "pid": {
                    "type": "integer"
                },
                "podName": {
                    "type": "string"
                },
                "serviceName": {
                    "description": "unused",
                    "type": "string"
                },
                "sourceFrom": {
                    "description": "log data source",
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "traceId": {
                    "type": "string"
                }
            }
        },
        "request.GetFaultLogPageListRequest": {
            "type": "object",
            "required": [
                "endTime"
            ],
            "properties": {
                "containerId": {
                    "description": "container name",
                    "type": "string"
                },
                "endTime": {
                    "description": "query end time",
                    "type": "integer"
                },
                "groupId": {
                    "description": "Data group id",
                    "type": "integer"
                },
                "instance": {
                    "description": "instance name",
                    "type": "string"
                },
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeName": {
                    "description": "hostname",
                    "type": "string"
                },
                "pageNum": {
                    "description": "page",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "display number per page",
                    "type": "integer"
                },
                "pid": {
                    "description": "process number",
                    "type": "integer"
                },
                "service": {
                    "description": "query service name",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "description": "query start time",
                    "type": "integer",
                    "minimum": 0
                },
                "traceId": {
                    "description": "TraceId",
                    "type": "string"
                }
            }
        },
        "request.GetServiceREDChartsRequest": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "integer"
                },
                "endpointList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "type": "integer"
                },
                "step": {
                    "type": "integer"
                }
            }
        },
        "request.GetServiceRouteRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.GetTraceFilterValueRequest": {
            "type": "object",
            "required": [
                "endTime"
            ],
            "properties": {
                "endTime": {
                    "description": "query end time",
                    "type": "integer"
                },
                "filter": {
                    "$ref": "#/definitions/request.SpanTraceFilter"
                },
                "searchText": {
                    "description": "query keyword",
                    "type": "string"
                },
                "startTime": {
                    "description": "query start time",
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "request.GetTracePageListRequest": {
            "type": "object",
            "required": [
                "endTime"
            ],
            "properties": {
                "containerId": {
                    "description": "container name",
                    "type": "string"
                },
                "endTime": {
                    "description": "query end time",
                    "type": "integer"
                },
                "endpoint": {
                    "description": "query Endpoint",
                    "type": "string"
                },
                "filters": {
                    "description": "filter",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.SpanTraceFilter"
                    }
                },
                "groupId": {
                    "description": "Data group id",
                    "type": "integer"
                },
                "instance": {
                    "description": "instance name",
                    "type": "string"
                },
                "namespace": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeName": {
                    "description": "hostname",
                    "type": "string"
                },
                "pageNum": {
                    "description": "page",
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "pid": {
                    "description": "process number",
                    "type": "integer"
                },
                "service": {
                    "description": "query service name",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "description": "query start time",
                    "type": "integer",
                    "minimum": 0
                },
                "traceId": {
                    "description": "TraceId",
                    "type": "string"
                }
            }
        },
        "request.GroupSubsOperationRequest": {
            "type": "object",
            "required": [
                "groupId"
            ],
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "teamList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.AuthDataGroup"
                    }
                },
                "userList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.AuthDataGroup"
                    }
                }
            }
        },
        "request.InputAlertManagerRequest": {
            "type": "object",
            "properties": {
                "ExternalURL": {
                    "type": "string"
                },
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.Alert"
                    }
                },
                "commonAnnotations": {
                    "$ref": "#/definitions/request.KV"
                },
                "commonLabels": {
                    "$ref": "#/definitions/request.KV"
                },
                "groupLabels": {
                    "$ref": "#/definitions/request.KV"
                },
                "receiver": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "truncatedAlerts": {
                    "type": "integer"
                }
            }
        },
        "request.KV": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "request.LogIndexRequest": {
            "type": "object",
            "required": [
                "endTime"
            ],
            "properties": {
                "column": {
                    "type": "string"
                },
                "dataBase": {
                    "type": "string"
                },
                "endTime": {
                    "type": "integer"
                },
                "logField": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer",
                    "minimum": 0
                },
                "tableName": {
                    "type": "string"
                },
                "timeField": {
                    "type": "string"
                }
            }
        },
        "request.LogQueryContextRequest": {
            "type": "object",
            "properties": {
                "dataBase": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "request.LogQueryRequest": {
            "type": "object",
            "required": [
                "endTime"
            ],
            "properties": {
                "dataBase": {
                    "type": "string"
                },
                "endTime": {
                    "type": "integer"
                },
                "isExternal": {
                    "type": "boolean"
                },
                "logField": {
                    "type": "string"
                },
                "pageNum": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer",
                    "minimum": 0
                },
                "tableName": {
                    "type": "string"
                },
                "timeField": {
                    "type": "string"
                }
            }
        },
        "request.LogTable": {
            "type": "object",
            "properties": {
                "buffer": {
                    "$ref": "#/definitions/request.BufferEngineConfig"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.Field"
                    }
                },
                "ttl": {
                    "type": "integer"
                }
            }
        },
        "request.LogTableInfoRequest": {
            "type": "object"
        },
        "request.Operation": {
            "type": "string",
            "enum": [
                "EQUAL",
                "NOT_EQUAL",
                "IN",
                "NOT_IN",
                "LIKE",
                "NOT_LIKE",
                "EXISTS",
                "NOT_EXISTS",
                "CONTAINS",
                "NOT_CONTAINS",
                "GREATER_THAN",
                "LESS_THAN"
            ],
            "x-enum-varnames": [
                "OpEqual",
                "OpNotEqual",
                "OpIn",
                "OpNotIn",
                "OpLike",
                "OpNotLike",
                "OpExists",
                "OpNotExists",
                "OpContains",
                "OpNotContains",
                "OpGreaterThan",
                "OpLessThan"
            ]
        },
        "request.OtherTableInfoRequest": {
            "type": "object",
            "properties": {
                "dataBase": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "request.OtherTableRequest": {
            "type": "object"
        },
        "request.ParentField": {
            "type": "string",
            "enum": [
                "labels",
                "flags"
            ],
            "x-enum-varnames": [
                "PF_Labels",
                "PF_Flags"
            ]
        },
        "request.SetSingleTTLRequest": {
            "type": "object",
            "required": [
                "day",
                "name"
            ],
            "properties": {
                "day": {
                    "description": "save data cycle days",
                    "type": "integer"
                },
                "name": {
                    "description": "table name",
                    "type": "string"
                }
            }
        },
        "request.SetTTLRequest": {
            "type": "object",
            "required": [
                "dataType",
                "day"
            ],
            "properties": {
                "dataType": {
                    "description": "type (log, trace, Kubernetes, other)",
                    "type": "string",
                    "enum": [
                        "logs",
                        "trace",
                        "k8s",
                        "other",
                        "topology"
                    ]
                },
                "day": {
                    "description": "save data cycle days",
                    "type": "integer"
                }
            }
        },
        "request.SpanTraceFilter": {
            "type": "object",
            "properties": {
                "dataType": {
                    "$ref": "#/definitions/request.DataType"
                },
                "key": {
                    "type": "string"
                },
                "operation": {
                    "$ref": "#/definitions/request.Operation"
                },
                "parentField": {
                    "$ref": "#/definitions/request.ParentField"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.UpdateAlertManagerConfigReceiver": {
            "type": "object",
            "properties": {
                "amConfigFile": {
                    "type": "string"
                },
                "amConfigReceiver": {
                    "$ref": "#/definitions/amconfig.Receiver"
                },
                "oldName": {
                    "type": "string"
                },
                "type": {
                    "description": "receiver type",
                    "type": "string"
                }
            }
        },
        "request.UpdateAlertRuleRequest": {
            "type": "object",
            "required": [
                "oldAlert",
                "oldGroup"
            ],
            "properties": {
                "alertRule": {
                    "$ref": "#/definitions/request.AlertRule"
                },
                "alertRuleFile": {
                    "type": "string"
                },
                "oldAlert": {
                    "type": "string"
                },
                "oldGroup": {
                    "type": "string"
                }
            }
        },
        "request.UpdateDataGroupRequest": {
            "type": "object",
            "required": [
                "groupId",
                "groupName"
            ],
            "properties": {
                "datasourceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Datasource"
                    }
                },
                "description": {
                    "type": "string"
                },
                "groupId": {
                    "type": "integer"
                },
                "groupName": {
                    "type": "string"
                }
            }
        },
        "request.UpdateLogParseRequest": {
            "type": "object",
            "properties": {
                "dataBase": {
                    "type": "string"
                },
                "isStructured": {
                    "type": "boolean"
                },
                "parseInfo": {
                    "type": "string"
                },
                "parseName": {
                    "type": "string"
                },
                "parseRule": {
                    "type": "string"
                },
                "routeRule": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "serviceName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tableFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.Field"
                    }
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "request.UpdateTeamRequest": {
            "type": "object",
            "required": [
                "teamId",
                "teamName"
            ],
            "properties": {
                "dataGroupPermission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.DataGroupPermission"
                    }
                },
                "description": {
                    "type": "string"
                },
                "featureList": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "teamId": {
                    "type": "integer"
                },
                "teamName": {
                    "type": "string"
                },
                "userList": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "response.AddOtherTableResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "response.AlertEventSearchResponse": {
            "type": "object",
            "properties": {
                "alertCheckId": {
                    "type": "string"
                },
                "alertEventAnalyzeWorkflowId": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/alert.AEventWithWRecord"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "response.CheckAlertRuleResponse": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                }
            }
        },
        "response.Column": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.CreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "primary key ID",
                    "type": "integer"
                }
            }
        },
        "response.DBInfo": {
            "type": "object",
            "properties": {
                "dataBase": {
                    "type": "string"
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.LogTableInfo"
                    }
                }
            }
        },
        "response.DeleteOtherTableResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "response.DeleteResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "primary key ID",
                    "type": "integer"
                }
            }
        },
        "response.DetailResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.Duration": {
            "type": "object",
            "properties": {
                "endTime": {
                    "description": "Timestamp of the response network packet, in microseconds",
                    "type": "integer"
                },
                "responseDuration": {
                    "description": "Response delay",
                    "type": "integer"
                },
                "startTime": {
                    "description": "The timestamp of the request network packet, in microseconds.",
                    "type": "integer"
                }
            }
        },
        "response.EntryInstanceData": {
            "type": "object",
            "properties": {
                "alertReason": {
                    "$ref": "#/definitions/model.AlertReason"
                },
                "appStatus": {
                    "description": "application alarm",
                    "type": "string"
                },
                "containerStatus": {
                    "description": "container alarm",
                    "type": "string"
                },
                "endpointCount": {
                    "type": "integer"
                },
                "infrastructureStatus": {
                    "description": "infrastructure alarm",
                    "type": "string"
                },
                "k8sStatus": {
                    "description": "K8s status alarm",
                    "type": "string"
                },
                "logs": {
                    "$ref": "#/definitions/response.TempChartObject"
                },
                "logsStatus": {
                    "description": "log metric alarm",
                    "type": "string"
                },
                "namespaces": {
                    "description": "The namespace of the application. It may be empty",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "netStatus": {
                    "description": "network alarm",
                    "type": "string"
                },
                "serviceDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ServiceDetail"
                    }
                },
                "serviceName": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "response.ErrorInfo": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "error message",
                    "type": "string"
                },
                "type": {
                    "description": "error type",
                    "type": "string"
                }
            }
        },
        "response.ErrorInstance": {
            "type": "object",
            "properties": {
                "containerId": {
                    "description": "container ID",
                    "type": "string"
                },
                "logs": {
                    "description": "log alarm",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "name": {
                    "description": "Bad instance name",
                    "type": "string"
                },
                "nodeName": {
                    "description": "hostname",
                    "type": "string"
                },
                "pid": {
                    "description": "process number",
                    "type": "integer"
                },
                "propations": {
                    "description": "error propagation info",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ErrorPropation"
                    }
                }
            }
        },
        "response.ErrorPropation": {
            "type": "object",
            "properties": {
                "children": {
                    "description": "downstream node list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.InstanceNode"
                    }
                },
                "current": {
                    "description": "current node",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.InstanceNode"
                        }
                    ]
                },
                "errors": {
                    "description": "error message",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ErrorInfo"
                    }
                },
                "parents": {
                    "description": "upstream node list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.InstanceNode"
                    }
                },
                "timestamp": {
                    "description": "timestamp",
                    "type": "integer"
                },
                "traceId": {
                    "description": "TraceId",
                    "type": "string"
                }
            }
        },
        "response.GetAlertEventsResponse": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clickhouse.PagedAlertEvent"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "response.GetAlertEventsSampleResponse": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/clickhouse.AlertEventSample"
                            }
                        }
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.GetAlertManagerConfigReceiverResponse": {
            "type": "object",
            "properties": {
                "amConfigReceivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/amconfig.Receiver"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "response.GetAlertRuleFileResponse": {
            "type": "object",
            "properties": {
                "alertRules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetAlertRulesResponse": {
            "type": "object",
            "properties": {
                "alertRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.AlertRule"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "response.GetDataGroupResponse": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "description": "current page number",
                    "type": "integer"
                },
                "dataGroupList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.DataGroup"
                    }
                },
                "pageSize": {
                    "description": "number of entries per page",
                    "type": "integer"
                },
                "total": {
                    "description": "total number of records",
                    "type": "integer"
                }
            }
        },
        "response.GetDatasourceResponse": {
            "type": "object",
            "properties": {
                "namespaceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Datasource"
                    }
                },
                "serviceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Datasource"
                    }
                }
            }
        },
        "response.GetDescendantMetricsResponse": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "description": "Endpoint",
                    "type": "string"
                },
                "latencyP90": {
                    "description": "P90 curve value",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/prometheus.MetricsPoint"
                    }
                },
                "serviceName": {
                    "description": "service name",
                    "type": "string"
                }
            }
        },
        "response.GetDescendantRelevanceResponse": {
            "type": "object",
            "properties": {
                "REDStatus": {
                    "description": "RED metric alarm",
                    "type": "string"
                },
                "alertReason": {
                    "$ref": "#/definitions/model.AlertReason"
                },
                "appStatus": {
                    "description": "application alarm",
                    "type": "string"
                },
                "containerStatus": {
                    "description": "container alarm",
                    "type": "string"
                },
                "delaySource": {
                    "description": "main source of delay unknown/self/dependency",
                    "type": "string"
                },
                "distance": {
                    "description": "delay curve difference",
                    "type": "number"
                },
                "distanceType": {
                    "description": "delay curve difference calculation method, there are four types of euclidean/pearson/dtw/failed/net_failed",
                    "type": "string"
                },
                "endpoint": {
                    "description": "Endpoint",
                    "type": "string"
                },
                "group": {
                    "description": "service type",
                    "type": "string"
                },
                "infrastructureStatus": {
                    "description": "infrastructure alarm",
                    "type": "string"
                },
                "isTraced": {
                    "description": "whether to trace",
                    "type": "boolean"
                },
                "k8sStatus": {
                    "description": "K8s status alarm",
                    "type": "string"
                },
                "logsStatus": {
                    "description": "log metric alarm",
                    "type": "string"
                },
                "netStatus": {
                    "description": "network alarm",
                    "type": "string"
                },
                "serviceName": {
                    "description": "service name",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Last deployment time",
                    "type": "integer"
                }
            }
        },
        "response.GetErrorInstanceResponse": {
            "type": "object",
            "properties": {
                "instances": {
                    "description": "error instance list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ErrorInstance"
                    }
                },
                "status": {
                    "description": "Bad instance status",
                    "type": "string"
                }
            }
        },
        "response.GetFaultLogContentResponse": {
            "type": "object",
            "properties": {
                "logContents": {
                    "$ref": "#/definitions/clickhouse.Logs"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetFaultLogPageListResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clickhouse.FaultLogResult"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "response.GetFlameDataResponse": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "integer"
                },
                "flameBearer": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "pid": {
                    "type": "integer"
                },
                "sampleRate": {
                    "type": "integer"
                },
                "sampleType": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "tid": {
                    "type": "integer"
                }
            }
        },
        "response.GetGroupDatasourceResponse": {
            "type": "object",
            "properties": {
                "namespaceMap": {
                    "description": "namespace: services",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "serviceMap": {
                    "description": "service: endpoints",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "response.GetGroupListResponse": {
            "type": "object",
            "properties": {
                "groupsLabel": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetK8sEventsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/response.K8sEventStatistics"
                    }
                },
                "reasons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.GetLogMetricsResponse": {
            "type": "object",
            "properties": {
                "containerId": {
                    "description": "container ID",
                    "type": "string"
                },
                "errorRate": {
                    "description": "error rate",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "latency": {
                    "description": "delay P90",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "logs": {
                    "description": "log alarm",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "name": {
                    "description": "Instance name",
                    "type": "string"
                },
                "nodeName": {
                    "description": "hostname",
                    "type": "string"
                },
                "pid": {
                    "description": "process number",
                    "type": "integer"
                }
            }
        },
        "response.GetMetricPQLResponse": {
            "type": "object",
            "properties": {
                "alertMetricsData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.AlertMetricsData"
                    }
                }
            }
        },
        "response.GetMonitorStatusResponse": {
            "type": "object",
            "properties": {
                "monitorList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.MonitorStatus"
                    }
                }
            }
        },
        "response.GetOnOffCPUResponse": {
            "type": "object",
            "properties": {
                "profilingEvent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clickhouse.ProfilingEvent"
                    }
                }
            }
        },
        "response.GetPolarisInferResponse": {
            "type": "object",
            "properties": {
                "inferCause": {
                    "type": "string"
                },
                "inferMetricsPng": {
                    "type": "string"
                }
            }
        },
        "response.GetProcessFlameGraphResponse": {
            "type": "object",
            "properties": {
                "endTime": {
                    "type": "integer"
                },
                "flameBearer": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "pid": {
                    "type": "integer"
                },
                "sampleRate": {
                    "type": "integer"
                },
                "sampleType": {
                    "type": "string"
                },
                "startTime": {
                    "type": "integer"
                },
                "tid": {
                    "type": "integer"
                }
            }
        },
        "response.GetSQLMetricsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/model.Pagination"
                },
                "sqlOperationDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SQLOperationDetail"
                    }
                }
            }
        },
        "response.GetServiceEndpointRelationResponse": {
            "type": "object",
            "properties": {
                "childRelations": {
                    "description": "downstream node call relationship list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ToplogyRelation"
                    }
                },
                "current": {
                    "description": "current service",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.TopologyNode"
                        }
                    ]
                },
                "parents": {
                    "description": "upstream node list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TopologyNode"
                    }
                }
            }
        },
        "response.GetServiceEndpointTopologyResponse": {
            "type": "object",
            "properties": {
                "children": {
                    "description": "downstream node list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TopologyNode"
                    }
                },
                "current": {
                    "description": "current service",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.TopologyNode"
                        }
                    ]
                },
                "parents": {
                    "description": "upstream node list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TopologyNode"
                    }
                }
            }
        },
        "response.GetServiceEntryEndpointsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.EntryInstanceData"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.GetServiceNamespaceListResponse": {
            "type": "object",
            "properties": {
                "namespaceList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetServiceREDChartsResponse": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/definitions/response.RedCharts"
                }
            }
        },
        "response.GetServiceRouteResponse": {
            "type": "object",
            "properties": {
                "routeRule": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetTTLResponse": {
            "type": "object",
            "properties": {
                "k8s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ModifyTableTTLMap"
                    }
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ModifyTableTTLMap"
                    }
                },
                "other": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ModifyTableTTLMap"
                    }
                },
                "topology": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ModifyTableTTLMap"
                    }
                },
                "trace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ModifyTableTTLMap"
                    }
                }
            }
        },
        "response.GetTeamResponse": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "description": "current page number",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "number of entries per page",
                    "type": "integer"
                },
                "teamList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Team"
                    }
                },
                "total": {
                    "description": "total number of records",
                    "type": "integer"
                }
            }
        },
        "response.GetTraceFilterValueResponse": {
            "type": "object",
            "properties": {
                "traceFilterOptions": {
                    "$ref": "#/definitions/clickhouse.SpanTraceOptions"
                }
            }
        },
        "response.GetTraceFiltersResponse": {
            "type": "object",
            "properties": {
                "traceFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.SpanTraceFilter"
                    }
                }
            }
        },
        "response.GetTraceMetricsResponse": {
            "type": "object",
            "properties": {
                "containerId": {
                    "description": "container ID",
                    "type": "string"
                },
                "errorRate": {
                    "description": "error rate",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "latency": {
                    "description": "delay P90",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "logs": {
                    "description": "log alarm",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "name": {
                    "description": "Instance name",
                    "type": "string"
                },
                "nodeName": {
                    "description": "hostname",
                    "type": "string"
                },
                "pid": {
                    "description": "process number",
                    "type": "integer"
                }
            }
        },
        "response.GetTracePageListResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clickhouse.QueryTraceResult"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "response.GetUserConfigResponse": {
            "type": "object",
            "properties": {
                "menuItem": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.MenuItem"
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.GetUserInfoResponse": {
            "type": "object",
            "properties": {
                "corporation": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "featureList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Feature"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "roleList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Role"
                    }
                },
                "teamList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Team"
                    }
                },
                "userId": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.GetUserListResponse": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "description": "current page number",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "number of entries per page",
                    "type": "integer"
                },
                "total": {
                    "description": "total number of records",
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.User"
                    }
                }
            }
        },
        "response.IndexItem": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "indexName": {
                    "type": "string"
                },
                "percent": {
                    "type": "number"
                }
            }
        },
        "response.Instance": {
            "type": "object",
            "properties": {
                "dataBases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.DBInfo"
                    }
                },
                "instanceName": {
                    "type": "string"
                }
            }
        },
        "response.InstanceData": {
            "type": "object",
            "properties": {
                "alertReason": {
                    "$ref": "#/definitions/model.AlertReason"
                },
                "appStatus": {
                    "description": "application alarm",
                    "type": "string"
                },
                "containerStatus": {
                    "description": "container alarm",
                    "type": "string"
                },
                "errorRate": {
                    "$ref": "#/definitions/response.TempChartObject"
                },
                "infrastructureStatus": {
                    "description": "infrastructure alarm",
                    "type": "string"
                },
                "k8sStatus": {
                    "description": "K8s status alarm",
                    "type": "string"
                },
                "latency": {
                    "$ref": "#/definitions/response.TempChartObject"
                },
                "logs": {
                    "$ref": "#/definitions/response.TempChartObject"
                },
                "logsStatus": {
                    "description": "log metric alarm",
                    "type": "string"
                },
                "name": {
                    "description": "Instance name",
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "netStatus": {
                    "description": "network alarm",
                    "type": "string"
                },
                "nodeIP": {
                    "type": "string"
                },
                "nodeName": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "tps": {
                    "$ref": "#/definitions/response.TempChartObject"
                }
            }
        },
        "response.InstanceNode": {
            "type": "object",
            "properties": {
                "instance": {
                    "type": "string"
                },
                "isTraced": {
                    "type": "boolean"
                },
                "service": {
                    "type": "string"
                }
            }
        },
        "response.InstancesRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.InstanceData"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.K8sEventCountValues": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "lastMonth": {
                    "type": "integer"
                },
                "lastWeek": {
                    "type": "integer"
                }
            }
        },
        "response.K8sEventStatistics": {
            "type": "object",
            "properties": {
                "counts": {
                    "$ref": "#/definitions/response.K8sEventCountValues"
                },
                "displayName": {
                    "type": "string"
                },
                "eventName": {
                    "type": "string"
                },
                "severity": {
                    "description": "Normal or Warning",
                    "type": "string"
                }
            }
        },
        "response.ListData": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "name": {
                    "description": "username",
                    "type": "string"
                }
            }
        },
        "response.ListResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ListData"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/response.Pagination"
                }
            }
        },
        "response.LogChartResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "histograms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.LogHistogram"
                    }
                },
                "progress": {
                    "type": "string"
                }
            }
        },
        "response.LogHistogram": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "from": {
                    "type": "integer"
                },
                "progress": {
                    "type": "string"
                },
                "to": {
                    "type": "integer"
                }
            }
        },
        "response.LogIndexResponse": {
            "type": "object",
            "properties": {
                "indexs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.IndexItem"
                    }
                }
            }
        },
        "response.LogItem": {
            "type": "object",
            "properties": {
                "content": {},
                "logFields": {
                    "type": "object",
                    "additionalProperties": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": true
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "response.LogParseResponse": {
            "type": "object",
            "properties": {
                "isStructured": {
                    "type": "boolean"
                },
                "parseInfo": {
                    "type": "string"
                },
                "parseName": {
                    "type": "string"
                },
                "parseRule": {
                    "type": "string"
                },
                "routeRule": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "serviceName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tableFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.Field"
                    }
                }
            }
        },
        "response.LogQueryContextResponse": {
            "type": "object",
            "properties": {
                "back": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.LogItem"
                    }
                },
                "front": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.LogItem"
                    }
                }
            }
        },
        "response.LogQueryResponse": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "defaultFields": {
                    "description": "tag field",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "string"
                },
                "hiddenFields": {
                    "description": "log field",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "limited": {
                    "type": "integer"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.LogItem"
                    }
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "response.LogTableInfo": {
            "type": "object",
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "logField": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                },
                "timeField": {
                    "type": "string"
                }
            }
        },
        "response.LogTableInfoResponse": {
            "type": "object",
            "properties": {
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Instance"
                    }
                },
                "parses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Parse"
                    }
                }
            }
        },
        "response.LoginResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "accessToken is used to call the interface get resources",
                    "type": "string"
                },
                "corporation": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "featureList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Feature"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "refreshToken": {
                    "description": "refreshToken for refreshing accessToken",
                    "type": "string"
                },
                "roleList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Role"
                    }
                },
                "teamList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Team"
                    }
                },
                "userId": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.MonitorStatus": {
            "type": "object",
            "properties": {
                "isAlive": {
                    "type": "boolean"
                },
                "monitorName": {
                    "type": "string"
                }
            }
        },
        "response.OtherDB": {
            "type": "object",
            "properties": {
                "dataBase": {
                    "type": "string"
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.OtherTable"
                    }
                }
            }
        },
        "response.OtherTable": {
            "type": "object",
            "properties": {
                "tableName": {
                    "type": "string"
                }
            }
        },
        "response.OtherTableInfoResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Column"
                    }
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "response.OtherTableResponse": {
            "type": "object",
            "properties": {
                "otherTables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.OtherDB"
                    }
                }
            }
        },
        "response.Pagination": {
            "type": "object",
            "properties": {
                "current_page": {
                    "description": "current page number",
                    "type": "integer"
                },
                "per_page_count": {
                    "description": "number of pieces per page",
                    "type": "integer"
                },
                "total": {
                    "description": "total number of records",
                    "type": "integer"
                }
            }
        },
        "response.Parse": {
            "type": "object",
            "properties": {
                "dataBase": {
                    "type": "string"
                },
                "parseInfo": {
                    "type": "string"
                },
                "parseName": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            }
        },
        "response.PodMapResponse": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "label_type": {
                                "type": "string"
                            },
                            "pre_as": {
                                "type": "string"
                            },
                            "type": {
                                "type": "integer"
                            },
                            "unit": {
                                "type": "string"
                            },
                            "value_type": {
                                "type": "string"
                            }
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {}
                    }
                }
            }
        },
        "response.RYGScoreDetail": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "response.RYGStatus": {
            "type": "string",
            "enum": [
                "red",
                "yellow",
                "green"
            ],
            "x-enum-varnames": [
                "RED",
                "YELLOW",
                "GREEN"
            ]
        },
        "response.Ratio": {
            "type": "object",
            "properties": {
                "dayOverDay": {
                    "description": "Day-over-Day Growth Rate",
                    "type": "number"
                },
                "weekOverDay": {
                    "description": "Week-over-Week Growth Rate",
                    "type": "number"
                }
            }
        },
        "response.RedCharts": {
            "type": "object",
            "properties": {
                "errorRate": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "latency": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "tps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "response.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "accessToken is used to call the interface get resources",
                    "type": "string"
                }
            }
        },
        "response.SQLOperationDetail": {
            "type": "object",
            "properties": {
                "dbName": {
                    "description": "DBName -\u003e ${database}",
                    "type": "string"
                },
                "dbOperation": {
                    "description": "DBOperation -\u003e ${operation} ${table}, e.g: SELECT trip",
                    "type": "string"
                },
                "dbSystem": {
                    "description": "DBSystem -\u003e ${SQL Type}, e.g: Mysql",
                    "type": "string"
                },
                "dbUrl": {
                    "type": "string"
                },
                "errorRate": {
                    "$ref": "#/definitions/response.TempChartObject"
                },
                "latency": {
                    "$ref": "#/definitions/response.TempChartObject"
                },
                "service": {
                    "type": "string"
                },
                "tps": {
                    "description": "FIXME Tps name is tps, actual requests per minute",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.TempChartObject"
                        }
                    ]
                }
            }
        },
        "response.SegmentLatency": {
            "type": "object",
            "properties": {
                "clientK8SNodeNic": {
                    "description": "Request and response time collected at the client host NIC",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Duration"
                        }
                    ]
                },
                "clientNic": {
                    "description": "Request and response time collected at the client NIC",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Duration"
                        }
                    ]
                },
                "clientProcess": {
                    "description": "Request and response times collected at the client process",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Duration"
                        }
                    ]
                },
                "serverK8SNodeNic": {
                    "description": "Request and response time collected at the server host NIC",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Duration"
                        }
                    ]
                },
                "serverNic": {
                    "description": "Request and response time collected at the server NIC",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Duration"
                        }
                    ]
                },
                "serverProcess": {
                    "description": "Request and response time collected at the server process",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Duration"
                        }
                    ]
                }
            }
        },
        "response.ServiceAlertRes": {
            "type": "object",
            "properties": {
                "alertReason": {
                    "$ref": "#/definitions/model.AlertReason"
                },
                "appStatus": {
                    "description": "application alarm",
                    "type": "string"
                },
                "containerStatus": {
                    "description": "container alarm",
                    "type": "string"
                },
                "infrastructureStatus": {
                    "description": "infrastructure alarm",
                    "type": "string"
                },
                "k8sStatus": {
                    "description": "K8s status alarm",
                    "type": "string"
                },
                "logs": {
                    "$ref": "#/definitions/response.TempChartObject"
                },
                "logsStatus": {
                    "description": "log metric alarm",
                    "type": "string"
                },
                "netStatus": {
                    "description": "network alarm",
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "response.ServiceDetail": {
            "type": "object",
            "properties": {
                "delaySource": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "errorRate": {
                    "$ref": "#/definitions/response.TempChartObject"
                },
                "latency": {
                    "$ref": "#/definitions/response.TempChartObject"
                },
                "tps": {
                    "description": "FIXME name is tps, actual requests per minute",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.TempChartObject"
                        }
                    ]
                }
            }
        },
        "response.ServiceEndPointsRes": {
            "type": "object",
            "properties": {
                "endpointCount": {
                    "type": "integer"
                },
                "namespaces": {
                    "description": "The namespace of the application. It may be empty",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ServiceDetail"
                    }
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "response.ServiceRYGLightRes": {
            "type": "object",
            "properties": {
                "serviceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ServiceRYGResult"
                    }
                }
            }
        },
        "response.ServiceRYGResult": {
            "type": "object",
            "properties": {
                "percentScore": {
                    "description": "percentage total score",
                    "type": "integer"
                },
                "score": {
                    "description": "total score",
                    "type": "integer"
                },
                "scoreDetail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.RYGScoreDetail"
                    }
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/response.RYGStatus"
                }
            }
        },
        "response.SpanSegmentMetricsResponse": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/response.SegmentLatency"
            }
        },
        "response.TempChartObject": {
            "type": "object",
            "properties": {
                "chartData": {
                    "description": "ChartData chart data",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "ratio": {
                    "description": "Ratio metric Day-over-Day Growth Rate rate",
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.Ratio"
                        }
                    ]
                },
                "value": {
                    "description": "Value metric average",
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "swagger interface documentation",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
